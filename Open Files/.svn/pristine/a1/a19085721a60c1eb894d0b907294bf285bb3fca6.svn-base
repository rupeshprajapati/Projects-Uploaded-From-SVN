IF EXISTS(SELECT [NAME] FROM SYS.PROCEDURES WHERE [NAME]='USP_MULTICO_REP_STIN_TRANSIT_DADOS_PANDL')
BEGIN
	DROP PROCEDURE USP_MULTICO_REP_STIN_TRANSIT_DADOS_PANDL
END
GO

/****** Object:  StoredProcedure [dbo].[USP_MULTICO_REP_STIN_TRANSIT_DADOS_PANDL]    Script Date: 05/16/2018 13:20:00 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE Procedure [dbo].[USP_MULTICO_REP_STIN_TRANSIT_DADOS_PANDL]
 @SDATE  SMALLDATETIME,@EDATE SMALLDATETIME
 ,@SAC AS VARCHAR(60),@EAC AS VARCHAR(60)
 ,@SIT AS VARCHAR(60),@EIT AS VARCHAR(60)
 ,@SWARE AS VARCHAR(60),@EWARE AS VARCHAR(60)
 ,@EXPARA  AS VARCHAR(4000) 
As
DECLARE @FCON AS NVARCHAR(2000)
EXECUTE   USP_REP_FILTCON 
@VTMPAC ='',@VTMPIT ='',@VSPLCOND =''
,@VSDATE=NULL
,@VEDATE=@EDATE
,@VSAC =@SAC,@VEAC =@EAC
,@VSIT=@SIT,@VEIT=@EIT
,@VSAMT=0,@VEAMT=0
,@VSDEPT='',@VEDEPT=''
,@VSCATE ='',@VECATE =''
,@VSWARE =@SWARE,@VEWARE  =@EWARE
,@VSINV_SR ='',@VEINV_SR =''
,@VMAINFILE='PTMAIN',@VITFILE='PTITEM',@VACFILE=' '
,@VDTFLD ='DATE'
,@VLYN=Null
,@VEXPARA=null
,@VFCON =@FCON OUTPUT

Declare @SQLCOMMAND AS NVARCHAR(4000),@ShowNil Varchar(100),@FldNmLst Varchar(4000),@FldValLst Varchar(4000),@CondCount Int
Declare @PDbName as Varchar(20)
Declare @DbName as Varchar(20)

Set @PDbName = case when @EXPARA like '%<~BS~>%' then REPLACE(substring(@EXPARA,charindex('<~BS~>',@EXPARA)+6,charindex('<~BE~>',@EXPARA)-charindex('<~BS~>',@EXPARA)-6),'DBNAME : ','') else '' end

SET @SQLCOMMAND='Select RecId = IDENTITY(int, 1,1),VStkCond = Cast('' '' as varchar(4000)),a.* 
	into ##STKVALConfig from StkValConfig a
		inner join Com_Det b on a.DbName=B.DbName'+
	 (case when @PDbName='' then '' else ' Where a.DbName='+CHAR(39)+@PDbName+CHAR(39) end)
--print @SQLCOMMAND
EXEC SP_EXECUTESQL  @SQLCOMMAND	


SELECT RecId=Cast(0 as int),
	RawId=Cast(0 as int),
	condition=Cast(' ' as nvarchar(max)),
	descrip=Cast(' ' as nvarchar(max)),
	tbl_name=Cast(' ' as nvarchar(max)),
	dbName=Cast(' ' as nvarchar(max))
	Into #StkValConfig1 FROM ##StkValConfig where 1 = 2
	
	
SET ARITHABORT On
Set @CondCount = 1
WHILE 1 = 1
BEGIN
	Set @SQLCOMMAND	= 'Insert into #StkValConfig1
		SELECT RecId,'+cast(@CondCount as varchar(5))+',
		vcond.value(''(//tmpvcond/condition)['+cast(@CondCount as varchar(5))+']'', ''nvarchar(max)'') as condition,
		vcond.value(''(//tmpvcond/descrip)['+cast(@CondCount as varchar(5))+']'', ''nvarchar(max)'') as descrip,
		vcond.value(''(//tmpvcond/tbl_name)['+cast(@CondCount as varchar(5))+']'', ''nvarchar(max)'') as tbl_name,
		DbName
		FROM ##StkValConfig'
	EXEC SP_EXECUTESQL  @SQLCOMMAND	
		
	IF Not Exists(Select * from #StkValConfig1 where RawId = @CondCount And condition Is Not Null)
		BREAK
	ELSE
		Set @CondCount = @CondCount + 1
		CONTINUE
END	

Update #StkValConfig1 Set condition = ISNULL(condition,''),descrip = ISNULL(descrip,''),tbl_name = ISNULL(tbl_name,'')
Delete from #StkValConfig1 Where condition = '' and descrip = '' and tbl_name = ''
Update #StkValConfig1 Set tbl_name = (case when tbl_name = 'STKL_VW_MAIN' then 'M' else (case when tbl_name = 'STKL_VW_ITEM' then 'I' else tbl_name end) end)

Declare @recid int,@condition Varchar(100),@descrip Varchar(4000),@tbl_name Varchar(100),@stkvcond Varchar(4000)
DECLARE C0STKVAL CURSOR FOR 
SELECT RecId FROM #StkValConfig1 Group BY RecId
OPEN C0STKVAL
FETCH NEXT FROM C0STKVAL INTO @recid
WHILE @@FETCH_STATUS=0
	BEGIN
	Set @stkvcond = ''

	DECLARE C01STKVAL CURSOR FOR 
	SELECT Condition,Descrip,Tbl_Name,DbName FROM #StkValConfig1 Where RecId = @recid
	ORDER BY RecId,Tbl_Name,Condition
	OPEN C01STKVAL
	FETCH NEXT FROM C01STKVAL INTO @Condition,@Descrip,@Tbl_Name,@DbName
	WHILE @@FETCH_STATUS=0
	BEGIN
			
		if replace(replace(@stkvcond,'[','+'),']','+') like '%'+'+'+LTRIM(RTRIM(@Condition))+'+'+'%'
		Begin
			Set @stkvcond = @stkvcond + ' Or '
		End	
		if replace(replace(@stkvcond,'[','+'),']','+') not like '%'+'+'+LTRIM(RTRIM(@Condition))+'+'+'%'
		Begin
			if @stkvcond <> ''
			Begin
				Set @stkvcond = @stkvcond + ' ) And '
			End	
			Set @stkvcond = @stkvcond + ' ( '
		End	
		Set @stkvcond = @stkvcond + '['+LTRIM(RTRIM(@Condition))+']' 
		Set @stkvcond = @stkvcond + ' = '''+@Descrip+''''
		
		FETCH NEXT FROM C01STKVAL INTO @Condition,@Descrip,@Tbl_Name,@DbName
	END
	CLOSE C01STKVAL
	DEALLOCATE C01STKVAL

	if @stkvcond <> ''
	Begin
		Set @stkvcond = @stkvcond + ' )'
	End	
	Set @stkvcond = REPLACE(@stkvcond,'''','''''')
	SET @SQLCOMMAND=' '
	SET @SQLCOMMAND=' Update ##STKVALConfig Set VStkCond = '''+@stkvcond+''' Where RecId = '+cast(@RecId as varchar(5))
	--print @SQLCOMMAND
	EXEC SP_EXECUTESQL  @SQLCOMMAND

	FETCH NEXT FROM C0STKVAL INTO @recid
END
CLOSE C0STKVAL
DEALLOCATE C0STKVAL

Drop Table #StkValConfig1

-- VNAME


SELECT PTMAIN.ENTRY_TY,PTMAIN.INV_NO,PTMAIN.DATE,PTMAIN.TRAN_CD,PTMAIN.PINVNO,PTMAIN.PINVDT,PTMAIN.PARTY_NM,
	PTITEM.ITEM,PTITEM.QTY,recqty=PTITEM.QTY,balqty=PTITEM.QTY,AMOUNT=PTMAIN.NET_AMT,PTITEM.WARE_NM,
	ltrim((str(ptitem.tran_cd)+rtrim(ptitem.itserial))) as pkey,VNAME=CAST('' AS VARCHAR(50)),PTMAIN.DEPT,PTMAIN.CATE,
	PTITEM.ITSERIAL,TOTPMV=PTMAIN.NET_AMT,PMI=PTMAIN.NET_AMT,ASSEAMT=PTMAIN.NET_AMT,PTITEM.PMKEY,
	BHENT=CAST('' AS VARCHAR(2)),PMV=PTMAIN.NET_AMT, PTMAIN.DBNAME
INTO #PTMAIN1
FROM PTMAIN
INNER JOIN PTITEM ON(PTMAIN.TRAN_CD=PTITEM.TRAN_CD)
INNER JOIN IT_MAST ON(IT_MAST.IT_CODE=PTITEM.IT_CODE)
INNER JOIN AC_MAST ON(PTMAIN.AC_ID=AC_MAST.AC_ID)
LEFT OUTER JOIN ARITREF ON (PTITEM.TRAN_CD=ARITREF.ITREF_TRAN AND PTITEM.ITSERIAL=ARITREF.RITSERIAL) WHERE 1=2

Set @SQLCOMMAND	='INSERT INTO  #PTMAIN1 
	SELECT PTMAIN.ENTRY_TY,PTMAIN.INV_NO,PTMAIN.DATE,PTMAIN.TRAN_CD,PTMAIN.PINVNO,PTMAIN.PINVDT,PTMAIN.PARTY_NM,
		PTITEM.ITEM,PTITEM.QTY,recqty=ISNULL(CASE WHEN ARITEM.DATE<='''+CONVERT(VARCHAR(50),@EDATE)+''' THEN ARITREF.RQTY ELSE 0 END,0),
		BALQTY=CAST((PTITEM.QTY-ISNULL(CASE WHEN ARITEM.DATE<'''+CONVERT(VARCHAR(50),@EDATE)+''' THEN CAST(ARITREF.RQTY AS NUMERIC(12,3))  ELSE 0 END,0)) AS NUMERIC(12,2)),
		AMOUNT=CAST(PTITEM.QTY AS NUMERIC(12,3))*PTITEM.RATE,PTITEM.WARE_NM,ltrim((str(ptitem.tran_cd)+rtrim(ptitem.itserial))) as pkey,
		VNAME=CAST('''' AS VARCHAR(50)),PTMAIN.DEPT,PTMAIN.CATE,PTITEM.ITSERIAL,0,0,0,PTITEM.PMKEY,''PT'',0, PTMAIN.DBNAME
	FROM PTMAIN
	INNER JOIN PTITEM ON(PTMAIN.TRAN_CD=PTITEM.TRAN_CD AND PTMAIN.DBNAME=PTITEM.DBNAME)
	INNER JOIN IT_MAST ON(IT_MAST.IT_CODE=PTITEM.IT_CODE AND IT_MAST.DBNAME=PTITEM.DBNAME)
	INNER JOIN AC_MAST ON(PTMAIN.AC_ID=AC_MAST.AC_ID AND PTMAIN.DBNAME=AC_MAST.DBNAME)
	LEFT OUTER JOIN ARITREF ON (PTITEM.TRAN_CD=ARITREF.ITREF_TRAN AND PTITEM.ITSERIAL=ARITREF.RITSERIAL AND PTITEM.DBNAME=ARITREF.DBNAME)
	LEFT JOIN ARITEM ON (ARITREF.TRAN_CD=ARITEM.TRAN_CD AND ARITREF.ITSERIAL=ARITEM.ITSERIAL AND ARITREF.DBNAME=ARITEM.DBNAME)'
SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+RTRIM(@FCON)
SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' AND PTMAIN.GOODSINTRN=1 '
SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+(case when @PDbName='' then '' else ' AND PTMAIN.DbName='+CHAR(39)+@PDbName+CHAR(39) end)
SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' ORDER BY PTMAIN.INV_NO'
	--PRINT @SQLCOMMAND
	EXEC SP_EXECUTESQL  @SQLCOMMAND
UPDATE 	#PTMAIN1 SET BALQTY=QTY-RECQTY		
Set @SQLCOMMAND	='UPDATE A SET A.RECQTY=(CASE WHEN ARITEM.DATE<='''+CONVERT(VARCHAR(50),@EDATE)+''' THEN B.RQTY ELSE 0 END),
	A.DATE=CASE WHEN ARITEM.DATE<='''+CONVERT(VARCHAR(50),@EDATE)+''' THEN ARITEM.DATE ELSE A.DATE END  
	FROM #PTMAIN1 A 
		INNER JOIN '+@DBNAME+'..PTITREF B ON (A.TRAN_CD=B.TRAN_CD AND A.ITSERIAL=B.ITSERIAL AND A.DBNAME='+CHAR(39)+@DBNAME+CHAR(39)+')			
		INNER JOIN '+@DBNAME+'..ARITEM ON (B.ITREF_TRAN=ARITEM.TRAN_CD AND B.RITSERIAL=ARITEM.ITSERIAL and b.dbname=ARITEM.DBNAME) '
EXEC SP_EXECUTESQL  @SQLCOMMAND


Update #PTMAIN1 Set VName = ISNULL(VName,'')
Declare @VName Varchar(100),@VType Varchar(20),@VCond Varchar(4000)
DECLARE C4STKVAL CURSOR FOR 
SELECT  VName,VType,VStkCond,DbName FROM ##STKVALConfig
ORDER BY DbName,VName
OPEN C4STKVAL
FETCH NEXT FROM C4STKVAL INTO @VName,@VType,@VCond,@DbName
WHILE @@FETCH_STATUS=0
BEGIN
	--print 'VCond'+@VCond
	If @VCond = ''
	begin
		set @VCond = 'IsNull(VName,'' '') = '' '''
	end
	ELSE
	BEGIN 
		set @VCond = '(#PTMAIN1.'+RIGHT(@VCond,LEN(@VCond)-3)
	END
	SET @SQLCOMMAND=' '
	--print 'vcond'
	SET @SQLCOMMAND=' Update #PTMAIN1 Set VName = '''+@VName+''' Where '+@VCond+' and DbName='+CHAR(39)+@DBNAME+CHAR(39)
	--print @SQLCOMMAND
	EXEC SP_EXECUTESQL  @SQLCOMMAND
		
	FETCH NEXT FROM C4STKVAL INTO @VName,@VType,@VCond,@DbName
END
CLOSE C4STKVAL
DEALLOCATE C4STKVAL


Declare @ExclDutyforDealer Bit,@ENTRY_TY VARCHAR(2),@BHENT VARCHAR(2)
set @ExclDutyforDealer = 0	
select top 1 @ExclDutyforDealer = ExclDutyforDealer from Manufact	

SET @SQLCOMMAND='SELECT  DBNAME,ENTRY_TY,(CASE WHEN EXT_VOU=1 THEN BCODE_NM ELSE ENTRY_TY END) AS BHENT,PMKEY=INV_STK  INTO ##L 
	FROM LCODE WHERE (V_ITEM<>0 ) AND INV_STK<>'' '' and entry_ty=''pt'' '+(case when @PDbName='' then '' else ' AND DbName='+CHAR(39)+@PDbName+CHAR(39) end)+' ORDER BY BHENT '
EXEC SP_EXECUTESQL @SQLCOMMAND

SET @SQLCOMMAND='SELECT  DISTINCT A.ENTRY_TY,A.FLD_NM,A.ATT_FILE,A_S=(CASE WHEN (A.CODE=''D'' OR A.CODE=''F'') THEN ''-'' ELSE ''+'' END),
	A.STKVAL,A.WEFSTKFROM,A.WEFSTKTO,TAX_NAME=SPACE(20),L.BHENT,A.DBNAME
INTO ##TAX
FROM DCMAST A INNER JOIN ##L L ON (A.ENTRY_TY=L.ENTRY_TY AND A.dbname=L.DBNAME) WHERE A.STKVAL<>0 and a.entry_ty=''pt''
'+(case when @PDbName='' then '' else ' AND A.DbName='+CHAR(39)+@PDbName+CHAR(39) end)+'
UNION
SELECT DISTINCT ENTRY_TY,FLD_NM=''TAXAMT   '',ATT_FILE=1,A_S=''+'',STKVAL,WEFSTKFROM,WEFSTKTO,TAX_NAME,BHENT=ENTRY_TY,DBNAME  
FROM STAX_MAS  
WHERE STKVAL<>0 and entry_ty=''pt'' '+(case when @PDbName='' then '' else ' AND DbName='+CHAR(39)+@PDbName+CHAR(39) end)
EXEC SP_EXECUTESQL @SQLCOMMAND

SET @SQLCOMMAND='SELECT  DISTINCT A.ENTRY_TY,A.FLD_NM,A.ATT_FILE,A_S=''-'',A.STKVAL,A.WEFSTKFROM,A.WEFSTKTO,TAX_NAME=SPACE(20),L.BHENT, A.DBNAME
INTO ##TAXEXCL
FROM DCMAST A INNER JOIN ##L L ON (A.ENTRY_TY=L.ENTRY_TY AND A.DBNAME=L.DBNAME) WHERE A.STKVAL=0 And A.Code = ''E'' '
EXEC SP_EXECUTESQL @SQLCOMMAND

SELECT * INTO #RECEIPT FROM #PTMAIN1


SELECT DBNAME,ENTRY_TY,TRAN_CD=0,ITSERIAL,AMT=GRO_AMT INTO #ITEM1 FROM STITEM  WHERE 1=2

DECLARE @TENTRY_TY AS VARCHAR(2),@FLD_NM AS VARCHAR(20),@ATT_FILE AS INT,@A_S AS VARCHAR(1),@WEFSTKFROM AS SMALLDATETIME,
	@WEFSTKTO AS SMALLDATETIME,@TBHENT AS VARCHAR(2),@TAX_NAME AS VARCHAR(30)
DECLARE @PARMDEFINATION NVARCHAR(50),@AMT AS NUMERIC(12,2)
UPDATE #RECEIPT SET PMI=0


Declare @MainTable Varchar(50),@IncExciseCol Bit,@codeType Varchar(2)		

set @MainTable=''									
set @IncExciseCol=0									

DECLARE  C2STKVAL CURSOR FOR 
SELECT  DISTINCT ENTRY_TY,BHENT,DBNAME FROM #PTMAIN1 
OPEN C2STKVAL
FETCH NEXT FROM C2STKVAL INTO @ENTRY_TY,@BHENT,@DBNAME
WHILE @@FETCH_STATUS=0
BEGIN
	set @MainTable='PTMain'		
	if Exists(Select c.[Name] From Syscolumns c Inner Join Sysobjects b on (b.id=c.id) Where b.[Name]=@MainTable and c.[name]='IncExcise')
	Begin
		set @IncExciseCol=1
	end

	DECLARE  C3STKVAL CURSOR FOR 
	SELECT FLD_NM,ATT_FILE,A_S,WEFSTKFROM,WEFSTKTO,BHENT,TAX_NAME FROM #TAX 
		WHERE ((ENTRY_TY=@ENTRY_TY) OR (BHENT='~~')) AND DBNAME=@DBNAME
	OPEN C3STKVAL
	FETCH NEXT FROM  C3STKVAL INTO @FLD_NM,@ATT_FILE,@A_S,@WEFSTKFROM,@WEFSTKTO,@TBHENT,@TAX_NAME
	WHILE @@FETCH_STATUS=0
	BEGIN
		set @codeType=''	
		IF @ATT_FILE='0'
		BEGIN
		    DELETE FROM #ITEM1
		    Select Top 1 @codeType=Code From Dcmast Where Entry_ty='PT' and fld_nm=@FLD_NM AND dbname=@DBNAME
			SET @SQLCOMMAND='INSERT INTO #ITEM1  (DBNAME,ENTRY_TY,TRAN_CD,ITSERIAL,AMT)'
			SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+'SELECT B.DBNAME,A.ENTRY_TY,A.TRAN_CD,A.ITSERIAL,(CASE WHEN A.'+RTRIM(@FLD_NM)+' IS NULL THEN 0 ELSE A.'+RTRIM(@FLD_NM)+' END)  
				FROM '+@DBNAME+'..PTITEM A INNER JOIN DCMAST B ON (A.ENTRY_TY=B.ENTRY_TY AND B.DBNAME='+CHAR(39)+@DBNAME+CHAR(39)+') 
				INNER JOIN #PTMAIN1 C ON (C.TRAN_CD=A.TRAN_CD AND C.DBNAME='+CHAR(39)+@DBNAME+CHAR(39)+')
				WHERE A.DATE BETWEEN '+CHAR(39)+CAST(@WEFSTKFROM AS VARCHAR)+CHAR(39)+ ' AND '+CHAR(39)+CAST(@WEFSTKTO AS VARCHAR)+CHAR(39) 
				+' AND A.ENTRY_TY=''PT'' AND B.FLD_NM='''
				+RTRIM(@FLD_NM)+''' AND B.STKVAL=1 '+CASE WHEN @IncExciseCol=1 and @codeType='E' THEN +' AND C.INCEXCISE=1 ' ELSE '' END
			EXECUTE SP_EXECUTESQL @SQLCOMMAND	
			SET @SQLCOMMAND='UPDATE  A SET A.PMI=A.PMI '+@A_S+' B.AMT FROM #ITEM1 B 
				INNER JOIN #PTMAIN1 A ON (A.ENTRY_TY=B.ENTRY_TY AND A.TRAN_CD=B.TRAN_CD AND A.ITSERIAL=B.ITSERIAL A.DBNAME=B.DBNAME)  
				WHERE  A.ENTRY_TY=''PT'' AND A.DBNAME='+CHAR(39)+@DBNAME+CHAR(39)
			
			EXECUTE SP_EXECUTESQL @SQLCOMMAND
		END	
		ELSE
		BEGIN
			IF @TAX_NAME<>''
			BEGIN
				DELETE FROM #ITEM1
				
				SET @SQLCOMMAND='INSERT INTO #ITEM1  (DBNAME,ENTRY_TY,TRAN_CD,ITSERIAL,AMT)'
				SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+'SELECT B.DBNAME,A.ENTRY_TY,A.TRAN_CD,A.ITSERIAL,
					(CASE WHEN '+RTRIM(@FLD_NM)+' IS NULL THEN 0 ELSE '+RTRIM(@FLD_NM)+' END)  
					FROM '+@DBNAME+'..PTITEM A 
					INNER JOIN STAX_MAS B ON (A.ENTRY_TY=B.ENTRY_TY AND RTRIM(A.TAX_NAME)=RTRIM(B.TAX_NAME) AND B.DBNAME='+CHAR(39)+@DBNAME+CHAR(39)+') 
					WHERE A.DATE BETWEEN '+CHAR(39)+CAST(@WEFSTKFROM AS VARCHAR)+CHAR(39)+ ' AND '+CHAR(39)+CAST(@WEFSTKTO AS VARCHAR)+CHAR(39)+
					' AND A.ENTRY_TY=''PT'' AND A.TAX_NAME='+CHAR(39) +@TAX_NAME+CHAR(39)+' and  A.taxamt<>0 AND B.STKVAL=1 '
				EXECUTE SP_EXECUTESQL @SQLCOMMAND
				SET @SQLCOMMAND='UPDATE A SET A.PMI=A.PMI '+@A_S+' B.AMT FROM #ITEM1 B 
					INNER JOIN #PTMAIN1 A ON (A.ENTRY_TY=B.ENTRY_TY AND A.TRAN_CD=B.TRAN_CD AND A.ITSERIAL=B.ITSERIAL AND A.DBNAME=B.DBNAME)  
					WHERE  A.ENTRY_TY=''PT'' AND A.DBNAME='+CHAR(39)+@DBNAME+CHAR(39)
				EXECUTE SP_EXECUTESQL @SQLCOMMAND 
			END
			ELSE
			BEGIN
				DELETE FROM #ITEM1 
				SET @SQLCOMMAND='INSERT INTO #ITEM1  (DBNAME,ENTRY_TY,TRAN_CD,ITSERIAL,AMT)'
				SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+'SELECT B.DBNAME, A.ENTRY_TY,A.TRAN_CD,ITSERIAL=0,(CASE WHEN '+RTRIM(@FLD_NM)+' IS NULL THEN 0 ELSE '
										+RTRIM(@FLD_NM)+' END)  FROM '+@DBNAME+'..PTMAIN A 
										INNER JOIN DCMAST B ON (A.ENTRY_TY=B.ENTRY_TY AND B.DBNAME='+CHAR(39)+@DBNAME+CHAR(39)+') WHERE A.DATE BETWEEN '
										+CHAR(39)+CAST(@WEFSTKFROM AS VARCHAR)+CHAR(39)+ ' AND '+CHAR(39)+CAST(@WEFSTKTO AS VARCHAR)+CHAR(39)
										+' AND A.ENTRY_TY=''PT'' AND B.FLD_NM='''+RTRIM(@FLD_NM)+''' AND B.STKVAL=1' 
										+CASE WHEN @IncExciseCol=1 and @codeType='E' THEN +' AND A.INCEXCISE=1 ' ELSE '' END
				EXECUTE SP_EXECUTESQL @SQLCOMMAND	
				SET @SQLCOMMAND='select  A=1,A.TOTPMV,A.TOTPMV, B.AMT FROM #ITEM1 B 
					INNER JOIN #PTMAIN1 A ON (A.ENTRY_TY=B.ENTRY_TY AND A.TRAN_CD=B.TRAN_CD ) 
					WHERE  A.ENTRY_TY=''PT'''
				SET @SQLCOMMAND='UPDATE  A SET A.TOTPMV=A.TOTPMV '+@A_S+' B.AMT FROM #ITEM1 B 
					INNER JOIN #PTMAIN1 A ON (A.ENTRY_TY=B.ENTRY_TY AND A.TRAN_CD=B.TRAN_CD A.DBNAME=B.DBNAME) 
					WHERE  A.ENTRY_TY=''PT'' AND A.DBNAME='+CHAR(39)+@DBNAME+CHAR(39)
				EXECUTE SP_EXECUTESQL @SQLCOMMAND
			END	

		END
		FETCH NEXT FROM  C3STKVAL INTO @FLD_NM,@ATT_FILE,@A_S,@WEFSTKFROM,@WEFSTKTO,@TBHENT,@TAX_NAME
	END
	CLOSE C3STKVAL
	DEALLOCATE C3STKVAL

	DECLARE  C4STKVAL CURSOR FOR 
	SELECT FLD_NM,ATT_FILE,A_S,WEFSTKFROM,WEFSTKTO,BHENT,TAX_NAME FROM #TAXEXCL 
		WHERE ((ENTRY_TY='PT') OR (BHENT='~~')) AND DBNAME=@DBNAME
	OPEN C4STKVAL
	FETCH NEXT FROM  C4STKVAL INTO @FLD_NM,@ATT_FILE,@A_S,@WEFSTKFROM,@WEFSTKTO,@TBHENT,@TAX_NAME
	WHILE @@FETCH_STATUS=0
	BEGIN
		set @codeType=''
		IF @ATT_FILE='0'
		BEGIN
		    DELETE FROM #ITEM1
		    Select Top 1 @codeType=Code From Dcmast Where Entry_ty='PT' and fld_nm=@FLD_NM AND dbname=@DBNAME
			SET @SQLCOMMAND='INSERT INTO #ITEM1  (DBNAME,ENTRY_TY,TRAN_CD,ITSERIAL,AMT)'
			SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+'SELECT B.DBNAME,A.ENTRY_TY,A.TRAN_CD,A.ITSERIAL,(CASE WHEN A.'+RTRIM(@FLD_NM)+' IS NULL THEN 0 ELSE A.'+RTRIM(@FLD_NM)+' END)  
				FROM '+@DBNAME+'..PTITEM A INNER JOIN DCMAST B ON (A.ENTRY_TY=B.ENTRY_TY AND B.DBNAME='+CHAR(39)+@DBNAME+CHAR(39)+') 
				INNER JOIN #PTMAIN1 C ON (C.TRAN_CD=A.TRAN_CD AND C.DBNAME='+CHAR(39)+@DBNAME+CHAR(39)+')
				WHERE A.ENTRY_TY=''PT'' AND B.FLD_NM='''
				+RTRIM(@FLD_NM)+''' AND B.STKVAL=0 '+CASE WHEN @IncExciseCol=1 and @codeType='E' THEN +' AND C.INCEXCISE=0 ' ELSE '' END
			EXECUTE SP_EXECUTESQL @SQLCOMMAND	

			SET @SQLCOMMAND='UPDATE  A SET A.PMI=A.PMI '+@A_S+' B.AMT FROM #ITEM1 B 
				INNER JOIN #PTMAIN1 A ON (A.ENTRY_TY=B.ENTRY_TY AND A.TRAN_CD=B.TRAN_CD AND A.ITSERIAL=B.ITSERIAL AND A.DBNAME=B.DBNAME)  
				WHERE  A.ENTRY_TY=''PT'' AND A.DBNAME='+CHAR(39)+@DBNAME+CHAR(39)
			EXECUTE SP_EXECUTESQL @SQLCOMMAND
		END	
		ELSE
		BEGIN
				DELETE FROM #ITEM1
				SET @SQLCOMMAND='INSERT INTO #ITEM1  (DBNAME,ENTRY_TY,TRAN_CD,ITSERIAL,AMT)'
				SET @SQLCOMMAND=RTRIM(@SQLCOMMAND)+' '+'SELECT B.DNAME,A.ENTRY_TY,A.TRAN_CD,ITSERIAL=0,(CASE WHEN '+RTRIM(@FLD_NM)+' IS NULL THEN 0 ELSE '
					+RTRIM(@FLD_NM)+' END)  FROM '+@DBNAME+'..PTMAIN A INNER JOIN DCMAST B ON (A.ENTRY_TY=B.ENTRY_TY AND B.DBNAME='+CHAR(39)+@DBNAME+CHAR(39)+') 
					WHERE A.ENTRY_TY=''PT'' AND B.FLD_NM='''+RTRIM(@FLD_NM)+''' AND B.STKVAL=0' 
					+CASE WHEN @IncExciseCol=1 and @codeType='E' THEN +' AND A.INCEXCISE=0 ' ELSE '' END
				EXECUTE SP_EXECUTESQL @SQLCOMMAND	
				SET @SQLCOMMAND='select  a=1,A.TOTPMV,A.TOTPMV, B.AMT FROM #ITEM1 B INNER JOIN #PTMAIN1 A ON (A.ENTRY_TY=B.ENTRY_TY AND A.TRAN_CD=B.TRAN_CD ) WHERE  A.ENTRY_TY=''PT'''
				SET @SQLCOMMAND='UPDATE  A SET A.TOTPMV=A.TOTPMV '+@A_S+' B.AMT FROM #ITEM1 B 
					INNER JOIN #PTMAIN1 A ON (A.ENTRY_TY=B.ENTRY_TY AND A.TRAN_CD=B.TRAN_CD AND A.DBNAME=B.DBNAME) 
					WHERE  A.ENTRY_TY=''PT'' AND A.DBNAME='+CHAR(39)+@DBNAME+CHAR(39)
				EXECUTE SP_EXECUTESQL @SQLCOMMAND
		END
		FETCH NEXT FROM  C4STKVAL INTO @FLD_NM,@ATT_FILE,@A_S,@WEFSTKFROM,@WEFSTKTO,@TBHENT,@TAX_NAME
	END
	CLOSE C4STKVAL
	DEALLOCATE C4STKVAL
	
	FETCH NEXT FROM C2STKVAL INTO @ENTRY_TY,@BHENT,@DBNAME
END
CLOSE C2STKVAL
DEALLOCATE C2STKVAL

UPDATE A SET ASSEAMT=(select SUM(b.QTY * b.RATE) from STKL_VW_ITEM B 
	where A.TRAN_CD=B.TRAN_CD and A.ENTRY_TY=B.ENTRY_TY AND A.dbname=B.DBNAME) FROM #PTMAIN1 A 
UPDATE  #PTMAIN1 SET PMV=(TOTPMV*AMOUNT)/(CASE WHEN ASSEAMT=0 THEN 1 ELSE ASSEAMT END) 


update #PTMAIN1 set amount=case when balqty > 0 then ((amount/qty)*balqty )+PMV+PMI else 0 end

SELECT ENTRY_TY,INV_NO,DATE,TRAN_CD,PINVNO,PINVDT,PARTY_NM,ITEM,QTY,recqty,BALQTY,AMOUNT,WARE_NM,pkey,VNAME,DEPT,
	CATE,ITSERIAL,DBNAME FROM #PTMAIN1

DROP TABLE #PTMAIN1

DROP TABLE ##STKVALConfig
DROP TABLE ##L
DROP TABLE ##TAX
DROP TABLE ##TAXEXCL
GO


